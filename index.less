// ---------- variables ----------

@white:         #ffffff;
@black:         #000000;
@grey:          #888888;
@blue:          #0000ff;
@blue-darker:   #0000cc;
@blue-dark:     #000099;
@green:         #009900;
@green-dark:    #007700;
@aqua:          #0099cc;
@red:           #ee1100;
@orange:        #ff7700;
@orange-darker: #ff6600;
@yellow:        #ffdd00;

// ---------- editor interface ----------

atom-text-editor,
:host {
  background-color: @white;
  color: @black;

  .wrap-guide {
    background-color: fade(@black, 10%);
  }

  .indent-guide {
    color: fade(@black, 10%);
  }

  .invisible-character {
    color: fade(@black, 25%);
  }

  .gutter {
    background: @white;
    color: fade(@black, 50%);

    .line-number {
      &.cursor-line {
        // background-color: fade(@yellow, 33%);
        color: fade(@black, 75%);
      }

      &.cursor-line-no-selection {
        color: fade(@black, 50%);
      }
    }
  }

  .gutter .line-number.folded,
  .gutter .line-number:after,
  .fold-marker:after {
    color: @red;
  }

  .invisible {
    color: fade(@black, 25%);
  }

  .cursor {
    color: @black;
    transition: opacity 0.167s;
    border-left-width: 2px;
  }

  .highlights {
    .highlight {
      .region {
        background: fade(@black, 10%);
      }

      &.selection {
        .region {
          background: fade(@black, 10%);
        }
      }

      &.bracket-matcher {
        .region {
          // border-bottom: 2px solid fade(@black, 10%);
          background: fade(@black, 10%);
          border: none;
        }
      }

      &.current-result,
      &.find-result {
        .region {
          background: fade(@yellow, 33%);
          border: none;
          border-radius: 0;
          outline: 2px solid fade(@yellow, 67%);
        }
      }

      &.current-result {
        .region {
          background: @yellow;
          outline: 2px solid @yellow;
        }
      }
    }
  }

  .line {}

  .cursor-line {
    background-color: fade(@black, 5%);
  }

}

// ---------- syntax ----------

:host,
atom-text-editor {

  .comment
  {
    color: @orange;
  }

  .operator {
    color: @black;

    &.logical {
      color: @black;
      font-weight: bold;
    }
  }

  .css .mathematical-symbols,
  .support,
  .storage,
  .modifier,
  .tag,
  .tag.style.html,
  .keyword,
  .function-call,
  .function,
  .object,
  .control
  {
    color: @blue;
  }

  .comment .type,
  .constant,
  .unit,
  .numeric
  {
    color: @red;
  }

  .attribute, // css
  .variable
  {
    color: @aqua;
  }

  .gfm.quote,
  .css.id,
  .css.class,
  .url,
  .string
  {
    color: @green;
  }

  .at-rule, // less/scss
  .css.tag,
  .html.attribute-name,
  .pseudo-class,
  .pseudo-element,
  .sgml,
  .css.function,
  .js.instance,
  .support.class, // coffee: Math
  .php.classobj,
  .terminator
  {
    color: @blue-darker;
  }

  .sgml,
  .sgml .punctuation
  {
    color: @red;
  }

  .php.inherited-class,
  .php.class.name
  {
    color: @blue-dark;
  }

  .meta {} // ???

  .at-rule .keyword, // less/scss
  .css.id,
  .doctype,
  .css .function,
  .php.classobj,
  .constant,
  .heading,
  .bold,
  .name,
  .magic,
  .class
  {
    font-weight: bold;
  }

  .css.pseudo-element,
  .css.pseudo-class,
  .comment,
  .italic
  {
    font-style: italic;
  }

  .gfm.quote .gfm.support,
  .terminator,
  .punctuation
  {
    opacity: 0.667;
  }

  .punctuation {
    color: inherit;
    font-weight: normal;
  }

  // ---------- embedded styles ----------

  .embedded {
    &.line {
      background-color: fade(@black, 5%);
    }

    &.begin,
    &.end {
      color: fade(@black, 66%);
    }
  }

  // .cursor-line .embedded.line {
  //   background-color: transparent;
  // }

  // ---------- source ----------

  .source {}

  // ---------- gfm ----------

  .gfm {
    .markup {
      -webkit-font-smoothing: auto;
    }

    .list {
      &.task {
        &.completed {
          font-style: italic;
          color: fade(@black, 33%);

          .text {
            text-decoration: line-through;
          }
        }
      }
    }

    .hr,
    .heading {
      color: @blue;

      .marker {
        font-weight: normal;
        opacity: 0.667;
      }
    }

    .raw {
      color: @green;

      .support.gfm {
        color: fade(@black, 50%);
      }
    }

    .strike {
      color: fade(@black, 33%);
      text-decoration: line-through;
    }

    .code {
      display: block;

      .support.gfm {
        color: fade(@black, 50%);
      }
    }

    .link {
      color: @green;

      .link {
        text-decoration: underline;
        color: @blue;
      }
    }

    .table {
      color: @blue-dark;

      .border {
        color: @blue;
      }
    }

    .username,
    .issue {
      color: @aqua;
    }

    .mention,
    .issue.tag {
      color: fade(@aqua, 50%);
    }

    // TODO
    .critic {
      &.addition {}
      &.deletion {}
      &.highlight {}
      &.comment {}
      &.substitution {}
    }
  }

  // ---------- html ----------

  .html {
    &.css.embedded,
    &.css.tag,
    &.scss.embedded,
    &.scss.tag,
    &.style.tag,
    &.script {
      color: @blue-dark;
    }

    .embedded {
      &.js {
        .html.tag {
          color: @blue-dark;
        }
      }
    }
  }

  // ---------- javascript ----------

  .js {
    .variable {
      color: @aqua; // this
    }

    &.constant {
      &:not(.numeric) {
        color: @blue-dark;
      }

      &.support, // x, y
      &.dom { // width, height
        color: @black;
        font-weight: normal;
      }
    }
  }

  // ---------- php ----------

  .php {

    &.storage.modifier.extends, // extends
    &.storage.modifier.abstract, // abstract
    &.basic-functions, // define()
    &.function.support,
    &.function.math, // floor()
    &.function.file, // realpath(), file_exists(), is_writable()
    &.function.dir, // opendir(), readdir()
    &.function.info, // ini_get()
    &.function.array, // array_merge()
    &.storage.type.class, // class
    &.storage.type.function, // function
    &.support.construct, // array(), isset(), empty()
    &.class.variable // Validate::$type ($type)
    {
      color: @blue;
    }

    &.storage.modifier, // public, private, global
    &.storage.type, // parent
    &.new, // new
    &.session, // session_start()
    &.import, // require(), include()
    &.network, // header()
    &.support.network, // header()
    &.control, // if, then, else, return, exit(), foreach, switch, case, default, break, die, while
    &.construct // echo
    {
      color: @blue-darker;
    }

    &.string,
    &.string-contents {
      color: @green;
    }

    &.constant {
      color: @red;
    }

    &.network,
    &.import
    {
      font-weight: bold;
    }

    .operator {
      &.assignment,
      &.key {
        color: @black;
      }

      &.class { // ->, ::
        color: fade(@black, 66%);
        font-weight: normal;
      }

      &.logical {
        color: @red;
      }
    }

    &.arguments {
      &:not(.argument) {
        color: fade(@black, 66%);
      }
    }
  }

  // ---------- text ----------

  .text {}

  // ---------- (s)css ----------

  .css,
  .scss {
    .attribute-name {
      font-weight: normal;
    }

    .id {
      font-weight: bold;
    }

    .property-value {
      color: @blue;
    }

    &.reference {
      color: @blue-darker;
    }

    &.important {
      color: @red;
    }
    // Maybe in the future...
    // &.property-name {
    //   &.vendor-prefix {
    //     color: fade(@blue, 66%);
    //     font-style: italic;
    //   }
    // }
  }

  // ---------- sql ----------

  .sql {
    &.keyword {
      font-weight: bold;
    }

    &.keyword.operator {
      font-weight: normal;
      color: @green;
    }
  }

  // ---------- less ----------

  .less {}

}

// atom-text-editor[mini] .scroll-view,
// :host([mini]) .scroll-view {
//   padding-left: 1px;
// }
