@white:         #ffffff;
@black:         #000000;
@grey:          #888888;

@blue:          #0000ff;
@blue-darker:   #0000cc;
@blue-dark:     #000099;
@green:         #009900;
@green-dark:    #007700;
@green-darker:  #0099cc; // TODO wrong name
@red:           #ee1100;
@orange:        #ff7700;
@orange-darker: #ff6600;
@yellow:        #ffdd00;




atom-text-editor,
:host {
  background-color: @white;
  color: @black;

  .wrap-guide {
    background-color: fade(@black, 10%);
  }

  .indent-guide {
    color: fade(@black, 10%);
  }

  .invisible-character {
    color: fade(@black, 25%);
  }

  .gutter {
    background-color: @white;
    color: fade(@black, 50%);

    .line-number {
      &.cursor-line {
        // background-color: @white;
        color: @black;
      }

      &.cursor-line-no-selection {
        color: fade(@black, 50%);
      }
    }
  }

  .gutter .line-number.folded,
  .gutter .line-number:after,
  .fold-marker:after {
    color: @black;
  }

  .invisible {
    color: fade(@black, 25%);
  }

  .cursor {
    color: @black;
  }

  .selection .region {
    background-color: fade(@grey, 25%);
  }

  .search-results .marker .region,
  .search-results .marker .region {
    background-color: transparent;
    border: 1px solid fade(@black, 25%);
  }

  .search-results .marker.current-result .region,
  .search-results .marker.current-result .region {
    border: 1px solid fade(@black, 50%);
  }

  .line {}

  .cursor-line {
    background-color: fade(@black, 5%);
  }







  // .operator.logical,
  .comment {
    color: @orange;
  }

  .operator {
    color: @black;

    &.logical {
      color: @black;
      font-weight: bold;
    }
  }

  .css .mathematical-symbols,
  // .css.pseudo-class,
  // .css.pseudo-element,
  .support,
  .storage,
  .modifier,
  .tag,
  .keyword,
  .function-call,
  .function,
  .object,
  .control {
    color: @blue;
  }

  .comment .type,
  .constant,
  .unit,
  .numeric {
    color: @red;
  }

  .attribute, // css
  .variable {
    color: @green-darker;
  }

  .gfm.quote,
  .css.id,
  .css.class,
  .url,
  .string {
    color: @green;
  }

  .css.class,
  .css.id {
    // color: @green-dark;
  }

  .at-rule, // less/scss
  .css .tag,
  .html .attribute-name,
  .pseudo-class,
  .pseudo-element,
  .sgml,
  .css .function,
  .js.instance,
  .support.class, // coffee: Math
  .php.support.function,
  .php.classobj,
  .terminator,
  .storage.modifier {
    color: @blue-darker;
  }




  .at-rule, // less/scss
  .css.id,
  // .css.pseudo-class,
  // .css.pseudo-element,
  .doctype,
  .css .function,
  .php.support.function,
  .php.classobj,
  .constant,
  .heading,
  .bold,
  .name,
  .magic,
  .class {
    font-weight: bold;
  }

  .css.pseudo-element,
  .css.pseudo-class,
  .comment,
  .italic {
    font-style: italic;
  }

  .terminator,
  .punctuation {
    opacity: 0.667;
  }





// TODO embedded styles
.embedded {
  &.line {
    background-color: fade(@black, 5%);
    padding: 1px 0;
  }

  &.begin,
  &.end {
    color: fade(@black, 66%);
  }
}

.cursor-line .embedded.line {
  background-color: transparent;
}




  // Language specific styling
  .source {}
  .gfm {
    .markup {
      -webkit-font-smoothing: auto;
    }

    .list {
      color: @grey;
    }

    .hr,
    .heading {
      color: @blue;
    }

    .raw {
      color: @green;
    }
  }
  .js {
    .variable {
      color: @green-darker; // this
    }
    .constant {
      &:not(.numeric) {
        color: @blue-dark;
      }
      &.support, // x, y
      &.dom { // width, height
        color: @black;
        font-weight: normal;
      }
    }
  }
  .php {
    .storage {
      &.modifier {
        // font-weight: bold; // public, private, global
        // text-decoration: underline;
        font-style: italic;
      }
      &.class {
        font-style: italic; // class
      }
    }
    .control {
      // font-weight: bold; // if, then, else, return
    }
    .function-call {
      font-weight: bold;
    }
    .operator {
      &.assignment,
      &.key {
        color: @black;
      }
      &.class { // ->, ::
        // color: fade(@green-darker, 66%);
        // color: inherit;
        color: fade(@black, 66%);
        font-weight: normal;
      }
      &.logical {
        color: @red;
      }
    }
    .arguments {
      &:not(.argument) {
        color: fade(@black, 66%);
      }
    }
  }
  .html {}
  .text {}

  .css,
  .scss {
    .attribute-name {
      font-weight: normal;
    }
    .id {
      font-weight: bold;
    }
    .property-value {
      color: @blue;
    }
  }




}












.meta {} // ???









atom-text-editor[mini] .scroll-view,
:host([mini]) .scroll-view {
  padding-left: 1px;
}
